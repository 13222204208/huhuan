package initialize

import (
	"os"

	"github.com/flipped-aurora/gin-vue-admin/server/global"
	"github.com/flipped-aurora/gin-vue-admin/server/model/autocode"
	"github.com/flipped-aurora/gin-vue-admin/server/model/example"
	"github.com/flipped-aurora/gin-vue-admin/server/model/system"

	"go.uber.org/zap"
	"gorm.io/gorm"
)

// Gorm 初始化数据库并产生数据库全局变量
// Author SliverHorn
func Gorm() *gorm.DB {
	switch global.GVA_CONFIG.System.DbType {
	case "mysql":
		return GormMysql()
	case "pgsql":
		return GormPgSql()
	default:
		return GormMysql()
	}
}

// RegisterTables 注册数据库表专用
// Author SliverHorn
func RegisterTables(db *gorm.DB) {
	err := db.AutoMigrate(
		// 系统模块表
		system.SysApi{},
		system.SysUser{},
		system.SysBaseMenu{},
		system.JwtBlacklist{},
		system.SysAuthority{},
		system.SysDictionary{},
		system.SysOperationRecord{},
		system.SysAutoCodeHistory{},
		system.SysDictionaryDetail{},
		system.SysBaseMenuParameter{},
		system.SysBaseMenuBtn{},
		system.SysAuthorityBtn{},
		// 示例模块表
		example.ExaFile{},
		example.ExaCustomer{},
		example.ExaFileChunk{},
		example.ExaFileUploadAndDownload{},

		// 自动化模块表
		// Code generated by github.com/flipped-aurora/gin-vue-admin/server Begin; DO NOT EDIT.
		autocode.AutoCodeExample{},
		autocode.MinappSet{},
		autocode.MinappUser{},
		autocode.Agreement{},
		autocode.HelpMe{},
		autocode.Banner{},
		autocode.Area{},
		autocode.Coupon{},
		autocode.ReleaseRecord{},
		autocode.ComplaintLabel{},
		autocode.Complaint{},
		autocode.HelpRepair{},
		autocode.HelpWork{},
		autocode.HelpFetch{},
		autocode.HelpBuy{},
		autocode.HelpIncidentally{},
		autocode.HelpCarpool{},
		autocode.HelpGroupon{},
		autocode.HelpSecond{},
		autocode.Category{},
		autocode.CheckDriver{},
		autocode.CheckMerchant{},
		autocode.CreditRating{},
		autocode.PayCoupon{},
		autocode.Withdraw{},
		autocode.Commission{},
		autocode.SystemMessage{},
		autocode.CheckIdentity{},
		autocode.MoneyRecord{},
		// Code generated by github.com/flipped-aurora/gin-vue-admin/server End; DO NOT EDIT.
	)
	if err != nil {
		global.GVA_LOG.Error("register table failed", zap.Error(err))
		os.Exit(0)
	}
	global.GVA_LOG.Info("register table success")
}
